name: Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          # Extract the changelog section for this version
          VERSION="${GITHUB_REF#refs/tags/v}"

          # Use awk to extract content between version headers
          CHANGELOG=$(awk -v version="$VERSION" '
            /^## \[/ {
              if (found) exit;
              if ($0 ~ "\\[" version "\\]") {
                found=1;
                next;
              }
            }
            found && /^## \[/ { exit }
            found { print }
          ' CHANGELOG.md)

          # If no changelog found, use a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="See [CHANGELOG.md](https://github.com/Oratorian/emby-watchparty/blob/main/CHANGELOG.md) for details."
          fi

          # Save to output (escape for multiline)
          {
            echo 'NOTES<<EOF'
            echo "$CHANGELOG"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Create release archive
        run: |
          # Create a clean directory for the release
          mkdir -p release-temp
          
          # Copy application files to temp directory (exclude development files)
          rsync -a . release-temp/ \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='__pycache__' \
            --exclude='*.pyc' \
            --exclude='logs/' \
            --exclude='config.py' \
            --exclude='.vscode' \
            --exclude='.idea' \
            --exclude='*.swp' \
            --exclude='.DS_Store' \
            --exclude='venv/' \
            --exclude='env/' \
            --exclude='.venv/' \
            --exclude='*.log'
          
          # Rename the directory to include version
          mv release-temp emby-watchparty-${{ steps.get_version.outputs.VERSION }}

          # Create the zip file with proper options
          zip -r emby-watchparty-${{ steps.get_version.outputs.VERSION }}.zip \
            emby-watchparty-${{ steps.get_version.outputs.VERSION }}/ \
            -x "*.git*" -x "*__pycache__*"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: emby-watchparty-${{ steps.get_version.outputs.VERSION }}.zip
          body: |
            ## Emby Watch Party v${{ steps.get_version.outputs.VERSION }}

            ${{ steps.changelog.outputs.NOTES }}

            ---

            ### Installation
            1. Download and extract `emby-watchparty-${{ steps.get_version.outputs.VERSION }}.zip`
            2. Copy `config.py.example` to `config.py` and configure your Emby server details
            3. Install dependencies: `pip install -r requirements.txt`
            4. Run: `python app.py`
            5. Open browser to `http://localhost:5000`

            ### What's Included
            - Complete application source code
            - Requirements file for easy dependency installation
            - Example configuration file
            - README with full documentation
            - MIT License

            ### Requirements
            - Python 3.8 or higher
            - Emby server with user account credentials
            - Modern web browser

            See [README.md](https://github.com/Oratorian/emby-watchparty/blob/main/README.md) for full documentation.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
